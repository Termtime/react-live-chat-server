{"version":3,"sources":["components/MessageContainer.js","components/OwnMessageContainer.js","resources/img/exit.svg","reducers/actions.js","containers/MessagesBox.js","components/MessagesBox.js","components/MessageTextArea.js","containers/MessageTextArea.js","resources/img/user.svg","components/UserItem.js","containers/UserList.js","components/UserList.js","containers/App.js","App.js","containers/HomePage.js","pages/HomePage.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["MessageContainer","props","className","user","username","message","body","time","OwnMessageContainer","USER_JOINED","DISCONNECTED","RECEIVED_MSG","CONNECT","INITIALIZE","JOIN_ROOM","connectedComponent","connect","state","messages","users","ownUser","roomId","dispatch","disconnect","type","connection","history","useHistory","style","lineHeight","length","id","src","exit","onClick","push","map","msg","i","timeout","socket","useState","setMessage","sendMessage","e","preventDefault","trim","messageObject","date","Date","toLocaleTimeString","current","emit","stoppedTyping","alignItems","onSubmit","rows","value","onInput","clearTimeout","setTimeout","target","onKeyDown","keyCode","shiftKey","placeholder","UserItem","socketREF","payload","initialize","receivedMessage","updateUserlist","userlist","usersTyping","setUsersTyping","useRef","usersREF","port","process","PORT","useEffect","io","on","userInfo","room","updatedUserList","console","log","document","querySelector","scrollTo","scrollHeight","typingUser","find","obj","undefined","filter","close","setRoom","setUsername","required","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","store","createStore","action","ReactDOM","render","StrictMode","exact","path","component","HomePage","App","getElementById"],"mappings":"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","file":"static/js/main.7cf0cf39.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const MessageContainer = (props) => {\r\n    return (\r\n        <div className=\"row message\">\r\n            <div className=\"col\">\r\n                <div className=\"row\">\r\n                    <small className=\"username\">{props.user.username}</small>\r\n                </div>\r\n                <div className=\"row \">\r\n                    <p className=\"wrap messageText\">{props.message.body}</p>\r\n                </div>\r\n                <div className=\"row timeStamp\">\r\n                    <small>{props.message.time}</small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const OwnMessageContainer = (props) => {\r\n    return (\r\n        <div className=\"row ownMessage\">\r\n            <div className=\"col\">\r\n                <div className=\"row\">\r\n                    <p className=\"wrap messageText\">{props.message.body}</p>\r\n                </div>\r\n                <div className=\"row timeStamp\">\r\n                    <small>{props.message.time}</small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/exit.f0dbdb09.svg\";","export const USER_JOINED = \"USER_JOINED\";\r\nexport const DISCONNECTED = \"DISCONNECTED\";\r\nexport const USER_LEFT = \"USER_LEFT\";\r\nexport const RECEIVED_MSG = \"RECEIVED_MSG\";\r\nexport const CONNECT = \"CONNECT\";\r\nexport const INITIALIZE = \"INITIALIZE\";\r\nexport const JOIN_ROOM = \"JOIN_ROOM\";\r\n// export const\r\n","import { connect } from \"react-redux\";\r\nimport { MessagesBoxBase } from \"../components/MessagesBox\";\r\nimport { DISCONNECTED } from \"../reducers/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messages,\r\n        users: state.users,\r\n        ownUser: state.ownUser,\r\n        roomId: state.roomId,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        disconnect: () => dispatch({ type: DISCONNECTED }),\r\n    };\r\n};\r\n\r\nconst connection = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nconst connectedComponent = connection(MessagesBoxBase);\r\n\r\nexport { connectedComponent as MessagesBox };\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MessageContainer } from \"./MessageContainer\";\r\nimport { OwnMessageContainer } from \"./OwnMessageContainer\";\r\nimport exit from \"../resources/img/exit.svg\";\r\n\r\nexport const MessagesBoxBase = (props) => {\r\n    const history = useHistory();\r\n    function disconnect() {\r\n        props.disconnect();\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"col messageBox-container\">\r\n            <div className=\"row messageBox-container-header\">\r\n                <div className=\"col\">\r\n                    <p>Room: {props.roomId} </p>\r\n                </div>\r\n                <div className=\"col text-right\">\r\n                    <div className=\"row right text-right\">\r\n                        <p style={{ lineHeight: \"3vh\" }}>\r\n                            {props.users.length}{\" \"}\r\n                            {`${props.users.length === 1 ? \"user\" : \"users\"}`}{\" \"}\r\n                            online\r\n                        </p>\r\n                        <img\r\n                            id=\"exit-btn\"\r\n                            src={exit}\r\n                            onClick={disconnect}\r\n                        ></img>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"messages\" className=\"row \">\r\n                <div className=\"col\">\r\n                    {props.messages.map((msg, i) => {\r\n                        if (msg.user.id === props.ownUser.id) {\r\n                            return (\r\n                                <OwnMessageContainer key={i} message={msg} />\r\n                            );\r\n                        } else {\r\n                            return (\r\n                                <MessageContainer\r\n                                    key={i}\r\n                                    message={msg}\r\n                                    user={msg.user}\r\n                                />\r\n                            );\r\n                        }\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// export const MessagesBoxBase = (props) =>{\r\n//   return (\r\n//       <div id=\"chatbox\" className=\"row messageBox-container\">\r\n//         <div id=\"messages\" className=\"col\">\r\n//           {\r\n//             props.messages.map((msg, i) => {\r\n//               if(msg.user.id === props.ownUser.id){\r\n//                 return (\r\n//                   <OwnMessageContainer key={i} message={msg}/>\r\n//                 );\r\n//               }else{\r\n//                 return (\r\n//                   <MessageContainer key={i} message={msg} user={msg.user}/>\r\n//                 )\r\n//               }\r\n//             }\r\n//             )\r\n//           }\r\n//         </div>\r\n//     </div>\r\n//   );\r\n// }\r\n","import React, { useState } from \"react\";\r\n\r\nlet timeout = null;\r\nlet isTyping = false;\r\nexport const MessageTextAreaBase = (props) => {\r\n    const [message, setMessage] = useState(\"\");\r\n    function sendMessage(e) {\r\n        if (e) e.preventDefault();\r\n        if (message.trim().length === 0) return;\r\n        const messageObject = {\r\n            body: message,\r\n            user: props.ownUser,\r\n            roomId: props.roomId,\r\n            date: new Date(),\r\n            time: new Date().toLocaleTimeString(\"en-US\"),\r\n        };\r\n        setMessage(\"\");\r\n        props.socket.current.emit(\"send-msg\", messageObject);\r\n    }\r\n\r\n    function stoppedTyping() {\r\n        isTyping = false;\r\n        props.socket.current.emit(\"clientStoppedTyping\", props.ownUser.id);\r\n        timeout = null;\r\n    }\r\n\r\n    function handleChange(e) {\r\n        if (timeout) {\r\n            clearTimeout(timeout);\r\n        } else {\r\n            props.socket.current.emit(\"isTyping\");\r\n        }\r\n        timeout = setTimeout(stoppedTyping, 3000);\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        if (e.keyCode == 13 && !e.shiftKey) {\r\n            if (timeout) clearTimeout(timeout);\r\n            stoppedTyping();\r\n            sendMessage();\r\n            if (e) e.preventDefault();\r\n        }\r\n    }\r\n    return (\r\n        <form\r\n            style={{ alignItems: \"flex-end\" }}\r\n            className=\"row form-inline\"\r\n            onSubmit={sendMessage}\r\n        >\r\n            <textarea\r\n                id=\"msgInput\"\r\n                rows=\"1\"\r\n                className=\"form-control\"\r\n                value={message}\r\n                onInput={handleChange}\r\n                onKeyDown={handleKeyDown}\r\n                placeholder=\"Write something...\"\r\n            ></textarea>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n                Send\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { MessageTextAreaBase } from \"../components/MessageTextArea\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        socket: state.socket,\r\n        ownUser: state.ownUser,\r\n        roomId: state.roomId,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nconst connection = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nconst connectedComponent = connection(MessageTextAreaBase);\r\n\r\nexport { connectedComponent as MessageTextArea };\r\n","export default __webpack_public_path__ + \"static/media/user.4ad10357.svg\";","import React from \"react\";\r\nimport user from \"../resources/img/user.svg\";\r\n\r\nexport const UserItem = (props) => {\r\n    return (\r\n        <div className=\"userlist-username\">\r\n            <img src={user} className=\"avatar\" />\r\n            <span>{props.user.username}</span>\r\n        </div>\r\n    );\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { UserListBase } from \"../components/UserList\";\r\nimport { DISCONNECTED } from \"../reducers/actions\";\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.users,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\nconst connection = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nconst connectedComponent = connection(UserListBase);\r\n\r\nexport { connectedComponent as UserList };\r\n","import React from \"react\";\r\nimport { UserItem } from \"./UserItem\";\r\nexport const UserListBase = (props) => {\r\n    return (\r\n        <div className=\"userList-container\">\r\n            <div className=\"userList\">\r\n                <div id=\"userlist-title\" className=\"row center\">\r\n                    <p>Users</p>\r\n                </div>\r\n                <div id=\"users\">\r\n                    {props.users.map((user) => (\r\n                        <UserItem user={user} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { App } from \"../App\";\r\nimport {\r\n    CONNECT,\r\n    DISCONNECTED,\r\n    INITIALIZE,\r\n    RECEIVED_MSG,\r\n    USER_JOINED,\r\n} from \"../reducers/actions\";\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.users,\r\n        socketREF: state.socket,\r\n        messages: state.messages,\r\n        roomId: state.roomId,\r\n        ownUser: state.ownUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        disconnect: () => dispatch({ type: DISCONNECTED }),\r\n        connect: (ownUser) => dispatch({ type: CONNECT, payload: ownUser }),\r\n        initialize: (socket) => dispatch({ type: INITIALIZE, payload: socket }),\r\n        receivedMessage: (msg) =>\r\n            dispatch({ type: RECEIVED_MSG, payload: msg }),\r\n        updateUserlist: (userlist) =>\r\n            dispatch({ type: USER_JOINED, payload: userlist }),\r\n    };\r\n};\r\n\r\nconst connection = connect(mapStateToProps, mapDispatchToProps);\r\nconst connectedComponent = connection(App);\r\n\r\nexport { connectedComponent as App };\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./css/App.css\";\nimport io from \"socket.io-client\";\nimport { MessagesBox } from \"./containers/MessagesBox\";\nimport { MessageTextArea } from \"./containers/MessageTextArea\";\nimport { UserList } from \"./containers/UserList\";\nimport { useHistory } from \"react-router-dom\";\nexport const App = (props) => {\n    const [usersTyping, setUsersTyping] = useState([]);\n    const history = useHistory();\n    const socketREF = useRef();\n    const usersREF = useRef();\n    const port = process.env.PORT || 8000;\n    useEffect(() => {\n        //if roomId or username is not set, then return to homepage and clear redux state\n        if (!props.roomId || !props.ownUser.username) {\n            history.push(\"/\");\n            props.disconnect();\n            return;\n        }\n\n        socketREF.current = io.connect(`http://localhost:${port}`);\n        props.initialize(socketREF);\n        socketREF.current.on(\"own-id\", (id) => {\n            var userInfo = {\n                username: props.ownUser.username,\n                id: id,\n                room: props.roomId,\n            };\n\n            props.connect(userInfo);\n            socketREF.current.emit(\"presentation\", userInfo);\n        });\n\n        socketREF.current.on(\"userlist-update\", (updatedUserList) => {\n            props.updateUserlist(updatedUserList);\n            usersREF.current = updatedUserList;\n            console.log(\"user list has been updated\", usersREF.current);\n        });\n\n        socketREF.current.on(\"msg\", (message) => {\n            receivedMessage(message);\n        });\n\n        socketREF.current.on(\"isTyping\", (id) => {\n            //search user in user array\n            console.log(\"someones typing\");\n            console.log(usersREF.current);\n            console.log(id);\n            var typingUser = usersREF.current.find((obj) => obj.id === id);\n            if (typingUser === undefined) {\n                console.log(\"undefined user found typing, almost crashed\");\n            } else {\n                setUsersTyping([...usersTyping, typingUser]);\n            }\n        });\n\n        socketREF.current.on(\"stoppedTyping\", (id) => {\n            //search user in user array\n            var stoppedTypingUser = usersREF.current.find(\n                (obj) => obj.id === id\n            );\n            if (stoppedTypingUser === undefined) {\n                console.log(\n                    \"undefined user found to have stopped typing, almost crashed\"\n                );\n            } else {\n                setUsersTyping(usersTyping.filter((user) => user.id !== id));\n            }\n        });\n        return () => {\n            socketREF.current.close();\n            props.disconnect();\n        };\n    }, []);\n\n    function receivedMessage(message) {\n        props.receivedMessage(message);\n        document\n            .querySelector(\"#messages\")\n            .scrollTo(0, document.querySelector(\"#messages\").scrollHeight);\n    }\n\n    return (\n        <div className=\"flex-container col App \">\n            <div id=\"app\">\n                <div className=\"row\">\n                    <MessagesBox />\n                    <UserList />\n                </div>\n\n                <div id=\"typingStatus\">\n                    {usersTyping.map((user, i) => {\n                        return (\n                            <small key={`${user.id}-typing`}>\n                                {user.username} is typing...\n                            </small>\n                        );\n                    })}\n                </div>\n                <MessageTextArea />\n            </div>\n        </div>\n    );\n};\n","import { connect } from \"react-redux\";\r\nimport { HomePage } from \"../pages/HomePage\";\r\nimport { JOIN_ROOM } from \"../reducers/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setRoom: (roomId) => dispatch({ type: JOIN_ROOM, payload: roomId }),\r\n    };\r\n};\r\n\r\nconst connection = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nconst connectedComponent = connection(HomePage);\r\n\r\nexport { connectedComponent as HomePage };\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../css/homePage.css\";\r\n\r\nexport const HomePage = (props) => {\r\n    const history = useHistory();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [newRoom, setNewRoom] = useState(\"\");\r\n    const [room, setRoom] = useState(\"\");\r\n\r\n    function joinRoom(e) {\r\n        if (e) e.preventDefault();\r\n        console.log(\"pushing route\");\r\n        props.setRoom({ room: room, username: username });\r\n        history.push(\"/room\");\r\n        console.log(\"route pushed\");\r\n    }\r\n\r\n    function createRoom(e) {}\r\n\r\n    return (\r\n        <div className=\"homepage\">\r\n            <div className=\"\">\r\n                <div className=\"homepage-header\">\r\n                    <div className=\"whiteTxt\">\r\n                        <div className=\"row center\">\r\n                            <h1> Welcome to Live-chat!</h1>\r\n                        </div>\r\n                        <div className=\"row center\">\r\n                            <h3> Join chat rooms, and talk to your friends!</h3>\r\n                        </div>\r\n                    </div>\r\n                    <form onSubmit={joinRoom}>\r\n                        <div className=\"offset-2 col-8 \">\r\n                            <div className=\"input-group flex-nowrap\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <label>\r\n                                        <span className=\"input-group-text\">\r\n                                            Username:\r\n                                        </span>\r\n                                    </label>\r\n                                </div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={username}\r\n                                    onInput={(e) => setUsername(e.target.value)}\r\n                                    placeholder=\"Termtime\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"center form-inline\">\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <label>\r\n                                        <span className=\"input-group-text\">\r\n                                            Room name:\r\n                                        </span>\r\n                                    </label>\r\n                                </div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Termtime's room\"\r\n                                    value={room}\r\n                                    onInput={(e) => setRoom(e.target.value)}\r\n                                    required\r\n                                />\r\n                                <div className=\"input-group-append\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary\"\r\n                                    >\r\n                                        Join\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <br />\r\n                </div>\r\n                <div className=\"homepage-bottom\">\r\n                    <div className=\"row center\">\r\n                        <div className=\"col-3\">\r\n                            <div className=\"card \">\r\n                                <div className=\"card-body text-dark\">\r\n                                    <h3 className=\"card-title \">\r\n                                        <b>What</b> do we do?\r\n                                    </h3>\r\n                                    <hr />\r\n                                    <p>\r\n                                        Offer a free space to chat and talk with\r\n                                        friends or random people about common\r\n                                        topics or interests.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body text-dark\">\r\n                                    <h3 className=\"card-title \">\r\n                                        <b>How</b> do we do it?\r\n                                    </h3>\r\n                                    <hr />\r\n                                    <p>\r\n                                        Using Express and Socket.io with rooms\r\n                                        we can connect people through a simple\r\n                                        WebApp.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body text-dark\">\r\n                                    <h3 className=\"card-title \">\r\n                                        <b>Why</b> do we do it?\r\n                                    </h3>\r\n                                    <hr />\r\n                                    <p>\r\n                                        Because there is always a need to\r\n                                        explore new and fun ways to use and\r\n                                        apply technology in daily life.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    CONNECT,\r\n    DISCONNECTED,\r\n    INITIALIZE,\r\n    JOIN_ROOM,\r\n    RECEIVED_MSG,\r\n    USER_JOINED,\r\n} from \"./actions\";\r\nimport io from \"socket.io-client\";\r\nconst INITIAL_STATE = {\r\n    ownUser: {},\r\n    socket: {},\r\n    users: [],\r\n    messages: [],\r\n    roomId: \"\",\r\n};\r\n\r\nfunction liveChat(state = INITIAL_STATE, action) {\r\n    console.log(state, action);\r\n    switch (action.type) {\r\n        case JOIN_ROOM:\r\n            return {\r\n                ...state,\r\n                ownUser: { username: action.payload.username },\r\n                roomId: action.payload.room,\r\n            };\r\n        case DISCONNECTED:\r\n            if (state.socket)\r\n                if (state.socket.current) state.socket.current.close();\r\n            return INITIAL_STATE;\r\n        case USER_JOINED:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n            };\r\n        case CONNECT:\r\n            return {\r\n                ...state,\r\n                ownUser: action.payload,\r\n            };\r\n        case INITIALIZE:\r\n            return {\r\n                ...state,\r\n                socket: action.payload,\r\n            };\r\n        case RECEIVED_MSG:\r\n            return { ...state, messages: [...state.messages, action.payload] };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { liveChat };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"jquery/dist/jquery\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport { App } from \"./containers/App\";\nimport { HomePage } from \"./containers/HomePage\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport { liveChat } from \"./reducers\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(liveChat);\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <Switch>\n                    <Route exact path=\"/\" component={HomePage}></Route>\n                    <Route exact path=\"/room\" component={App}></Route>\n                </Switch>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}